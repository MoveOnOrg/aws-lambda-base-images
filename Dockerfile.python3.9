FROM public.ecr.aws/lambda/python:3.9-x86_64

ENV LANG=en_US.UTF-8
ENV TZ=:/etc/localtime
ENV PATH=/var/lang/bin:/usr/local/bin:/usr/bin/:/bin:/opt/bin
ENV LD_LIBRARY_PATH=/var/lang/lib:/lib64:/usr/lib64:/var/runtime:/var/runtime/lib:/var/task:/var/task/lib:/opt/lib
ENV LAMBDA_TASK_ROOT=/var/task
ENV LAMBDA_RUNTIME_DIR=/var/runtime

WORKDIR /var/task

ENTRYPOINT ["/lambda-entrypoint.sh"]

# Start: MoveOn's custom additions
ENV PATH=/usr/local/bin:/usr/bin/:/bin:/opt/bin:/var/lang/bin
ENTRYPOINT ["/lambda-entrypoint.sh", "app.handler"]
EXPOSE 8000

# Install git and vim
RUN yum -y install git vim

# Install pyenv prerequisites except sqlite
RUN yum groupinstall -y "Development Tools"
RUN yum install -y zlib zlib-devel bzip2-devel openssl-devel libffi-devel gcc make patch bzip2 readline-devel tk-devel xz-devel wget

# Install AWS CLI
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
RUN unzip awscliv2.zip
RUN ./aws/install
RUN rm awscliv2.zip
RUN rm -r aws

# Limit Parsons dependencies
RUN echo -e "\n# Limit Parsons dependencies\nexport PIP_NO_BINARY=parsons\nexport PARSONS_LIMITED_DEPENDENCIES=true" >> ~/.bashrc

# Install and build latest sqlite, needed for Ganymede
ENV SQLITE_VERSION="3430000"
RUN mkdir -p /opt/sqlite3 && cd /opt/sqlite3 \
&& wget "https://www.sqlite.org/2023/sqlite-autoconf-${SQLITE_VERSION}.tar.gz" \
&& tar xvfz "sqlite-autoconf-${SQLITE_VERSION}.tar.gz" \
&& cd "sqlite-autoconf-${SQLITE_VERSION}" \
&& ./configure \
&& make \
&& make install

# Compile Python from source using latest sqlite, install
ENV PYTHON_VERSION="3.9.18"
RUN mkdir -p /opt/python && cd /opt/python \
&& wget "https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz" \
&& tar xzf "Python-${PYTHON_VERSION}.tgz" \
&& cd "Python-${PYTHON_VERSION}" \
&& LD_RUN_PATH=/usr/local/lib ./configure \
&& LD_RUN_PATH=/usr/local/lib make \
&& LD_RUN_PATH=/usr/local/lib make install

# Custom compile PostgreSQL and psycopg2 for Python on AWS
ENV POSTGRESQL_VERSION="9.2.24"
RUN mkdir -p /opt/postgresql && cd /opt/postgresql \
&& wget "https://ftp.postgresql.org/pub/source/v${POSTGRESQL_VERSION}/postgresql-${POSTGRESQL_VERSION}.tar.gz"
RUN cd /opt/postgresql \
&& tar xzf "postgresql-${POSTGRESQL_VERSION}.tar.gz" \
&& cd "postgresql-${POSTGRESQL_VERSION}" \
&& ./configure --without-readline --without-zlib \
&& make \
&& make install

ENV PSYCOPG2_VERSION="2_8_5"
RUN mkdir -p /opt/psycopg2 && cd /opt/psycopg2 \
&& wget "https://github.com/psycopg/psycopg2/archive/refs/tags/${PSYCOPG2_VERSION}.tar.gz"
RUN cd /opt/psycopg2 \
&& tar xzf "${PSYCOPG2_VERSION}.tar.gz" \
&& cd "psycopg2-${PSYCOPG2_VERSION}" \
&& sed -i "s|pg_config=|pg_config=/opt/postgresql/postgresql-${POSTGRESQL_VERSION}/src/bin/pg_config/pg_config|" setup.cfg \
&& sed -i "s|static_libpq=0|static_libpq=1|" setup.cfg \
&& python3 setup.py build \
&& python3 setup.py install

# End: MoveOn's custom additions
